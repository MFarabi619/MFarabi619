# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  lib,
  pkgs,
  config,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ];

  nixpkgs={
    config={
      rocmSupport = true; # amd
      # cudaSupport = true; # intel
      };
    hostPlatform = lib.mkDefault "x86_64-linux";
    };

  hardware = {
    graphics.enable = true;
    enableAllFirmware = true;
    enableRedistributableFirmware = true;
    cpu = {
      # intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
      amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    };
  };

  boot={
    extraModulePackages = [ ];
    kernelModules = [ "kvm-amd" ];
    initrd={
      kernelModules = [ ];
      availableKernelModules = [
        "nvme"
        "usbhid"
        "xhci_pci"
        "thunderbolt"
        ];
      };
    };

  fileSystems={
    "/" = {
      fsType = "ext4";
      device = "/dev/disk/by-uuid/957a3d6d-0d53-4967-896a-1d91f1c1e720";
      };
    "/boot" = {
      fsType = "vfat";
      device = "/dev/disk/by-uuid/2812-E6A2";
      options = [
        "fmask=0077"
        "dmask=0077"
        ];
      };
    };


  swapDevices = [
    { device = "/dev/disk/by-uuid/bdef91e4-2bbc-4058-8856-53ba5d5b21f8"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking={
    useDHCP = lib.mkDefault true;
    # interfaces={
    # enp191s0.useDHCP = lib.mkDefault true;
    # wlp192s0.useDHCP = lib.mkDefault true;
    # };
    };
}
