[[https://nixos.org][NixOS Unstable]] [[https://discord.gg/AYbJ9MJez7][![Dynamic JSON Badge](https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscordapp.com%2Fapi%2Finvites%2FmT5YqjaJFh%3Fwith_counts%3Dtrue&query=%24.approximate_member_count&suffix=%20members&style=for-the-badge&logo=discord&logoColor=white&label=The%20HyDe%20Project&labelColor=ebbcba&color=c79bf0)]]

* Inventory

|  User  | 󰄛 Hostname   | 󰇺  Chassis              | 󰣇 OS              |  Kernel             | 󰍹  Display               | Desktop Environment |   CPU                            | 󰊴 GPU - Integrated                    |  GPU Driver |   Memory(GB) | Swap (GB) | Disk (TB) | Local IP            | 󱦟 OS Age | 󱫐 Uptime | 󰏗 Package Manager | >_ Terminal |
|---------+--------------+-------------------------+-------------------+----------------------+--------------------------+---------------------+-----------------------------------+---------------------------------------+--------------+---------------+-----------+-----------+---------------------+----------+----------+-------------------+-------------|
| mfarabi | guix         | Microsoft Surface Pro 7 | [[https://guix.gnu.org/en/download/][GNU GUIX]]          | Linux Libre          | TBD                      | EXWM                | Intel Core i5- @  GHz             |                                       |              |               |           |           | TBD                 | TBD      | pkg      | guix              |             |
| mfarabi | freebsd      | HP EliteBook 820 G2     | [[https://www.freebsd.org/where/][FreeBSD]]           | FreeBSD 14.3-RELEASE | 1366x768 @ 60Hz in 13"   | Hyprland            | Intel Core i5-5300U(4) @ 2.29 GHz | Intel Device 1616                     | N/A          |            16 | 4         |       0.5 | 10.0.0.230/24       | TBD      | TBD      | pkg               | zsh + kitty |
| mfarabi | mfarabi      | MacBook Air M1 2020     | macOS Sequoia     | Darwin 24.5.0        | 2880x1800 @ 60 Hz in 13" | Quartz              | Apple M1(8) @ 3.20 GHz            | Apple M1(7)                           | N/A          |             8 | 1         |     0.526 | (en0) 10.0.0.190/24 | TBD      | TBD      | nix               | zsh + kitty |
| mfarabi | ubuntu       | ASUS                    | [[https://www.freebsd.org/where/][FreeBSD]]           | FreeBSD 14.3-RELEASE | 1366x768 @ 60Hz in 13"   | Hyprland            | Intel Core i5-5300U(4) @ 2.29 GHz | Intel Device 1616                     | N/A          |            16 | 4         |       0.5 | 10.0.0.230/24       | TBD      | TBD      | pkg               | zsh + kitty |
| mfarabi | ubuntu       | MSI GS65                | [[https://ubuntu.com/download][Ubuntu 24.04]]      | linux-6.8            | TBD                      | N/A                 | TBD                               | TBD                                   | TBD          |           TBD | TBD       |       TBD | TBD                 | TBD      | TBD      | apt & nix         | zsh + kitty |
| mfarabi | ubuntu       | MSI GS76                | [[https://ubuntu.com/download][Ubuntu 24.04]]      | linux-6.8            | TBD                      | N/A                 | TBD                               | TBD                                   | TBD          |           TBD | TBD       |       TBD | TBD                 | TBD      | TBD      | nix               | zsh + kitty |
| mfarabi | archlinux    | Framework 16            | [[https://archlinux.org/download/][Arch Linux]]        | linux-6.15.2         | 2560x1600 @ 165Hz in 16" | Hyprland            | AMD Ryzen 9 7940HS @ 5.26 GHz     | AMD Radeon RX 7700S & AMD Radeon 780M | amdgpu       |            64 | TBD       |         4 | TBD                 | 323 days | 41 mins  | pacman & nix      | zsh + kitty |
| TBD     | TBD          | TBD                     | [[https://github.com/nix-community/NixOS-WSL][NixOS]]             | linux-6.15.2         | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| TBD     | TBD          | TBD                     | [[https://www.microsoft.com/en-us/software-download/windows11][Windows]]+[[https://github.com/nix-community/NixOS-WSL][NixOS WSL]] |                      | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | stm32        | STM32F3DISCOVERY        | N/A               | N/A                  | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | esp32        | Espressif ESP32         | N/A               | N/A                  | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | arduino-uno  | Arduino Uno             | N/A               | N/A                  | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | arduino-mega | Arduino Mega            | N/A               | N/A                  | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | rpi          | Raspberry Pi B          |                   |                      | N/A                      | N/A                 |                                   |                                       |              |               |           |           |                     |          |          |                   |             |
| mfarabi | dlink        | D-LINK DIR 1750         |                   |                      | N/A                      | N/A                 | TBD                               |                                       |              |               |           |           |                     |          |          |                   |             |

* Flash OS Image

1. View storage block
    #+begin_src bash
    lsblk
    #+end_src

2. Flash ISO to USB

   - =UNIX/Linux=
      #+begin_src bash
      sudo umount /dev/sdX*; sudo dd if=/path/to/os.iso of=/dev/sdX status=progress conv=sync;
      #+end_src

   - =Windows=
      #+begin_src sh
      sudo woeusb -d ~/Downloads/win-11.iso /dev/sdX
      #+end_src


* Configure System

[[https://nix.dev/manual/nix/2.18/installation/uninstall][Uninstalling Nix]]

1. Clone repo
   #+begin_src sh
   git clone https://github.com/MFarabi619/MFarabi619
   #+end_src

2. Install [[https://lix.systems][Lix]], a fork of [[https://determinate.systems][Determinate Nix]]
    #+begin_src sh
    curl -sSf -L https://install.lix.systems/lix | sh -s -- install --enable-flakes --no-confirm --extra-conf \"trusted-users = root $USER\"
    #+end_src

3. Initialize from Flake
   #+begin_src sh
   cd ~/MFarabi619/hosts/ubuntu; nix run nixpkgs#home-manager -- switch --flake .;
   #+end_src

* Install Host
Can share internet from phone via USB C Tethering.

** [[https://guix.gnu.org/en/][GNU GUIX]]
** [[https://www.talos.dev][Talos Linux]]
** [[https://github.com/nix-darwin/nix-darwin][macOS Silicon]]

[[https://github.com/Pyenb/macOS-ISOs?tab=readme-ov-file][GitHub - Pyenb/macOS-ISOs: macOS ISOs]]

#+BEGIN_SRC sh
# Install with flakes
curl -sSf -L https://install.lix.systems/lix | sh -s -- install
# sudo mkdir -p /etc/nix-darwin
# sudo chown $(id -nu):$(id -ng) /etc/nix-darwin
# cd /etc/nix-darwin

sudo nix-channel --add https://github.com/nix-darwin/nix-darwin/archive/master.tar.gz darwin
sudo nix-channel --update

nix shell nipkgs#git --command git clone https://github.com/MFarabi619/MFarabi619
sudo mv /etc/nix/nix.conf /etc/nix/nix.conf.before-nix-darwin
sudo nix --extra-experimental-features nix-command --extra-experimental-features flakes run nix-darwin/master#darwin-rebuild -- switch --flake .
#+end_src

** [[https://www.freebsd.org][FreeBSD]]

See =hosts/doombsd/README.org=

** [[https://nixos.org/download/#nixos-iso][NixOS]]

[[https://raw.githubusercontent.com/prasanthrangan/hyprdots/main/Source/assets/hyde_banner.png][Hyde Banner]]

**** Install [[https://github.com/richen604/hydenix/tree/main][Hydenix]]

1. Enable experimental features in =/etc/nixos/configuration.nix=:
    #+begin_src bash
    nix-shell -p git neovim
    #+end_src

    #+begin_src bash
    sudo nvim /etc/nixos/configuration.nix;
    #+end_src

    #+begin_src nix
    nix.settings.experimental-features = [ "nix-command" "flakes" ];
    #+end_src

    #+begin_src bash
    sudo nixos-rebuild switch;
    #+end_src

2. Clone template
    #+begin_src bash
    mkdir hydenix && cd hydenix; nix flake init -t github:richen604/hydenix;
    #+end_src

3. Customize =! EDIT= options in =configuration.nix=
    #+begin_src bash
    nvim configuration.nix
    #+end_src

4. Save hardware config
    #+begin_src bash
    sudo nixos-generate-config --show-hardware-config > hardware-configuration.nix
    #+end_src

5. Initialize repo
    #+begin_src bash
    git init
    #+end_src

6. Stage changes and rebuild system
    #+begin_src bash
    git add .; sudo nixos-rebuild switch --flake .
    #+end_src

7. Reboot
    #+begin_src bash
    reboot
    #+end_src

8. Change user password
    #+begin_src bash
    passwd
    #+end_src

8. Rebuild HyDE theme cache
    #+begin_src bash
    hyde-shell reload
    #+end_src

** [[https://archlinux.org][Arch Linux]]

*** 1. Prepare Environment

1. *Increase temporary writable space*
    #+begin_src bash
    mount -o remount,size=4g /run/archiso/cowspace
    #+end_src
2. *Improve console font visibility*
    #+begin_src bash
    setfont ter-132n
    #+end_src
3. Open =iwctl=
    #+begin_src bash
    iwctl
    #+end_src
4. List wireless devices
    #+begin_src bash
    device list
    #+end_src
   * Power on wireless card if necessary
       #+begin_src bash
       device wlan0 set-property Powered on
       #+end_src
     * If rfkill is blocking it...
        #+begin_src bash
        rfkill unblock wlan
        #+end_src
5. Verify properties
    #+begin_src bash
    device wlan0 show
    #+end_src
6. Scan for networks
    #+begin_src bash
    station wlan0 get-networks
    #+end_src
7. Connect to WiFi
    #+begin_src bash
    station wlan0 connect "IT HURTS WHEN IP 5G"
    #+end_src
    Enter passphrase when prompted.
8. Verify connectivity
    #+begin_src bash
    ping google.com
    #+end_src

Exit =iwctl= with =Ctrl+C=.

**** 2. Prepare Disk

1. Fetch =archinstall=
    #+begin_src bash
    pacman -Syu archinstall
    #+end_src
2. List partitions
    #+begin_src bash
    lsblk
    #+end_src
3. Check current partition setup
    #+begin_src bash
    fdisk -l
    #+end_src
4. Initialize disk setup (example for =/dev/nvme0n1=):
    #+begin_src bash
    gdisk /dev/nvme0n1
    #+end_src
    Steps in =gdisk=:
   - Enter expert mode
     #+begin_src bash
     x
     #+end_src
   - Zap the disk
     #+begin_src bash
     z
     #+end_src
   - Confirm twice
     #+begin_src bash
     Y
     #+end_src
     #+begin_src bash
     Y
     #+end_src
5. Check disk
    #+begin_src bash
    lsblk
    #+end_src

**** 3. Install Distro

1. Run =archinstall=
    #+begin_src bash
    archinstall
    #+end_src
  * Example options:
      *Mirror region:* Canada
      *Filesystem:* Btrfs
      *Swap:* Swap on zram enabled
      *Encryption:* None
      *Bootloader:* systemd-boot with unified kernel images
      *Hostname:* =archlinux=
      *User setup:* Include root and a standard user
      *Profile:* Minimal
      *Audio:* Pipewire
      *Network configuration:* NetworkManager
      *Timezone:* =America/Toronto=

3. After installation
    #+begin_src bash
    bcfg boot dump -b; bcfg boot rm;
    #+end_src

4. Reboot
    #+begin_src bash
    reboot
    #+end_src

**** 5. Install [[https://github.com/HyDE-Project/HyDE][HyDE]]
1. Set console font
    #+begin_src bash
    setfont -d
    #+end_src
2. Reconnect to WiFi
    #+begin_src bash
    sudo nmcli dev wifi connect "IT HURTS WHEN IP 5G" password "*****"
    #+end_src

3. Run installer
    #+begin_src bash
    pacman -Syu git base-devel pacseek;
    git clone --depth 1 https://github.com/HyDE-Project/HyDE ~/HyDE;
    cd ~/HyDE/Scripts;
    ./install.sh;
    #+end_src

    Select options:
   - =1-yay=
   - =1-zsh=
   - =1-gnu-free-fonts=
   - =2-multimedia-streamer=
   - =2-corners=

** Apollyon Linux

#+begin_src bash
nix --accept-flake-config profile install github:cachix/devenv
#+end_src

# [[https://omnix.page/index.html][Omnix]]
# #+begin_src bash
# nix --accept-flake-config profile install github:juspay/omnix
# #+end_src

# #+begin_src bash
# nix --accept-flake-config run github:juspay/omnix -- \
#   init -o ~/nix-config github:srid/nixos-unified#home
# #+end_src

#+begin_src bash
git add .; nix run .#activate $USER@
#+end_src

** [[https://ubuntu.com][Ubuntu]]

#+begin_src bash
sudo apt update && sudo apt upgrade -y
#+end_src

*** Resources
[[https://tech.aufomm.com/my-nix-journey-use-nix-with-ubuntu][My Nix Journey - Use Nix on Ubuntu]]

** [[https://github.com/nix-community/NixOS-WSL][NixOS-WSL]]

1. Install Windows 11

  #+begin_src bash
  sudo woeusb -d ~/Downloads/iso-images/Win11_24H2_English_x64.iso /dev/sdb
  #+end_src

2. Remove bloat
  # winget search DesiredStateConfiguration --source msstore
  # winget install --id 9NVTPZWRC6KQ --source msstore

  #+begin_src powershell
  winget list
  #+end_src

  #+begin_src powershell
  "Family", "Teams", "Photos", "Bing", "Edge", "365 (Office)", "To DO", "Clipchamp", "Edge Game Assist", "Calculator", | ForEach-Object { winget uninstall "Microsoft $_" }
  #+end_src

  #+begin_src powershell
  "Outlook for Windows", "Feedback Hub", "Phone Link", "Power Automate" | ForEach-Object { winget uninstall $_ }
  #+end_src

 https://github.com/pit-ray/win-vind

3. Activate optional features for WSL

#+begin_src powershell
Get-WindowsOptionalFeature -Online
  #+end_src

#+begin_src powershell
    Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-RemoteDesktopConnection HypervisorPlatform VirtualMachineplatform Microsoft-Windows-Subsystem-Linux
  #+end_src

#+begin_src powershell
    Disable-WindowsOptionalFeature -Online -NoRestart -FeatureName WindowsMediaPlayer SearchEngine-Client-Package
  #+end_src

#+begin_src powershell
Get-WindowsPackage -Online
  #+end_src

#+begin_src powershell
Remove-WindowsPackage -Online -FeatureName ""
  #+end_src

4. Install programs

  #+begin_src powershell
  Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine;
  New-Item -Path $PROFILE -Type File -Force;
  Set-ItemProperty 'HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem' -Name 'LongPathsEnabled' -Value 1;
  #+end_src

  #+begin_src powershell
  winget add emacs openscad git.git zig winrar gnuwin32.tar burntsushi.ripgrep.gnu llvm fd fzf curl.curl cmake television qemu neovim tailscale lazydocker lazygit eza yazi ttyd microsoft.windowsterminal.preview github.cli audacity.audacity steam obsproject.obsstudio videolan.vlc vscode gimp.gimp.3 authormore.penpotdesktop discord.discord figma vial komorebi whkd wezterm starship docker.desktop qmk.qmktoolbox devcom.jetbrainsmononerdfont
  #+end_src

  #+begin_src powershell
  Invoke-WebRequest https://get.pnpm.io/install.ps1 -UseBasicParsing | Invoke-Expression
  #+end_src

  #+begin_src powershell
    nvim $PROFILE;
  #+end_src

    Invoke-Expression ($starship init powershell)
    Set-Alias -Name l -Value eza
    Set-Alias -Name yy -Value yazi
    Set-Alias -Name lg -Value lazygit

  #+begin_src powershell
    starship preset gruvbox-rainbow -o ~/.config/starship.toml
  #+end_src

  #+begin_src powershell
    . $PROFILE
  #+end_src

 https://www.lazyvim.org/installation/

  [[https://lgug2z.github.io/komorebi/installation.html][Installation - Komorebi]]

  #+begin_src powershell
  komorebic quickstart
  komorebic start --whkd --bar
  #+end_src

  #+begin_src powershell
  winget add DesiredStateConfiguration powertoys vivaldi ubuntu "Athena OS" -s msstore --accept-package-agreements
  #+end_src

  #+begin_src powershell
  dsc resource list
  #+end_src

5. Install NixOS-WSL
    #+begin_src bash
    sudo nix-channel --update
    #+end_src

    #+begin_src bash
    nix-shell -p git lazygit
    #+end_src

    #+begin_src bash
    sudo cp ~/MFarabi619/configurations/nixos/nixos-wsl/initial-boot.nix /etc/nixos/configuration.nix
    #+end_src

    [[nix-community.github.io/NixOS-WSL/how-to/change-username]]

    #+begin_src bash
    sudo nixos-rebuild boot
    #+end_src

    #+begin_src bash
    exit
    #+end_src

    #+begin_src powershell
    wsl -t NixOS; wsl -d NixOS --user root exit; wsl -t NixOS; wsl -s NixOS
    #+end_src

    Set default terminal profile to NixOS.

    #+begin_src bash
    nix-shell -p git lazygit neovim yazi
    #+end_src

    #+begin_src bash
    git clone https://github.com/MFarabi619/MFarabi619;
    cd MFarabi619;
    #+end_src

    #+begin_src bash
    sudo nixos-rebuild boot --flake .
    #+end_src

** Raspberry Pi 5 ARM NixOS
[[https://wiki.nixos.org/wiki/NixOS_on_ARM/Raspberry_Pi_5][NixOS on ARM/Raspberry Pi 5 - NixOS Wiki]]

Download [[https://www.raspberrypi.com/software/operating-systems/][Raspberry Pi OS with desktop and recommended software]]

Flash to SD card & boot, then ...

#+begin_src bash
curl -sSf -L https://install.lix.systems/lix | sh -s -- install
#+end_src

#+begin_src bash
nix build github:nvmd/nixos-raspberrypi#installerImages.rpi5
#+end_src

#+begin_src bash
scp ./result mfarabi@ip...:
#+end_src

# flash same sd card with scp'ed image
#+begin_src bash
caligula burn --show-all-disks ./nixos-installer-rpi5-kernel.img.zst
#+end_src

Boot to sd card, then connect to network.

#+begin_src bash
iwctl
#+end_src

#+begin_src bash
  station wlan0 connect "IT HURTS WHEN IP 5G"
#+end_src

Clone this repo, then build flake.

#+begin_src bash
nix shell nixpkgs#{git,lazygit,neovim,yazi,zellij,btop,nix-btm}
#+end_src

#+begin_src bash
git clone https://github.com/MFarabi619/MFarabi619
#+end_src

#+begin_src bash
cd ~/MFarabi619/configurations/nixos/rpi5/installation
#+end_src

#+begin_src bash
nixos-rebuild switch --flake .#<system> --target-host root@<hostname>
#+end_src


** Android NixOS

[[https://github.com/nix-community/nix-on-droid?tab=readme-ov-file][GitHub - nix-community/nix-on-droid]]

** Hetzner

#+begin_src bash
  curl https://raw.githubusercontent.com/elitak/nixos-infect/master/nixos-infect | NIX_CHANNEL=nixos-25.05 bash -x
#+end_src
